import mongoose from "mongoose";
import counter from "./counter";

/**
 * Reservation schema
 */
const reservationSchema = new mongoose.Schema(
  {
    id: { type: Number, unique: true }, // use auto-increment id, instead of _id generated by database
    itemId: { type: Number, required: true },
    userId: { type: Number, required: true }, // reservation's applicant's id
    from: { type: Date, required: true }, // ISO Date
    to: { type: Date, required: true }, // ISO Date
    reason: String,
    approved: { type: Boolean, default: false }, // used for review
    createdAt: { type: Date, default: Date.now },
    createdBy: Number,
    updatedAt: { type: Date, default: Date.now },
    updatedBy: Number
  },
  {
    collection: "reservations"
  }
);

/**
 * Enable auto-increment
 * DO NOT USE ARROW FUNCTION HERE
 * Problem of `this` scope
 */
reservationSchema.pre("save", function(next) {
  const doc = this;
  counter.findByIdAndUpdate(
    "reservation",
    { $inc: { count: 1 } },
    { new: true, upsert: true },
    (err, counter) => {
      if (err) return next(err);
      doc.id = counter.count;
      next();
    }
  );
});

export default mongoose.model("Reservation", reservationSchema);
